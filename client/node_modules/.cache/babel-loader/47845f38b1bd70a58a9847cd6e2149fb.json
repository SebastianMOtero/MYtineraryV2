{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\CityOption\\\\cityOptions.js\";\nimport React from 'react';\nimport AppNavbar from '../AppNavbar/AppNavBar';\nimport Footer from '../Footer/Footer';\nimport { connect } from 'react-redux';\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { getCities } from '../../actions/cityActions';\n\nclass cityOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getCities(); // llamo a la funcion que genera como prop en el dispatch\n\n    this.setState({\n      cities: this.props.cities\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(AppNavbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"idCity\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Id\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"idCity\",\n      id: \"idCity\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"City\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"city\",\n      id: \"cityName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"country\",\n      id: \"countryName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"selectCountry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Select country\"), React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"selectCountry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.state.cities.map(city => {\n      return React.createElement(\"option\", {\n        value: city.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, city.name);\n    }))), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Anadir ciudad\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Modificar ciudad\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Eliminar ciudad\")), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    cities: state.cityReducer.cities\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(getCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(cityOptions);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/CityOption/cityOptions.js"],"names":["React","AppNavbar","Footer","connect","Button","Form","FormGroup","Label","Input","FormText","getCities","cityOptions","Component","constructor","props","state","cities","componentDidMount","setState","render","map","city","id","name","mapStateToProps","cityReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppNavbar from '../AppNavbar/AppNavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nimport { getCities } from '../../actions/cityActions';\r\n\r\nclass cityOptions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cities: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getCities() // llamo a la funcion que genera como prop en el dispatch\r\n        this.setState({\r\n            cities: this.props.cities\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <AppNavbar/>\r\n\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label for=\"idCity\">Id</Label>\r\n                        <Input type=\"text\" name=\"idCity\" id=\"idCity\" placeholder=\"\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"city\">City</Label>\r\n                        <Input type=\"text\" name=\"city\" id=\"cityName\" placeholder=\"\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"country\">Country</Label>\r\n                        <Input type=\"text\" name=\"country\" id=\"countryName\" placeholder=\"\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"selectCountry\">Select country</Label>\r\n                        <Input type=\"select\" name=\"select\" id=\"selectCountry\">\r\n                        {this.state.cities.map( city => {return <option value={city.id}>{city.name}</option>} )}\r\n                        {/* {this.state.data[0].map( x => { return <option>{x}</option> })} */}\r\n                        </Input>\r\n                    </FormGroup>\r\n                    <Button>Anadir ciudad</Button>\r\n                    <br></br>\r\n                    <Button>Modificar ciudad</Button>\r\n                    <br></br>\r\n                    <Button>Eliminar ciudad</Button>\r\n                    </Form> \r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        cities: state.cityReducer.cities\r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(getCities()),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(cityOptions);\r\n"]},"metadata":{},"sourceType":"module"}