{"ast":null,"code":"import { GET_CITIES, DATA_LOADING, GET_ITINERARIES, GET_CITY } from './types';\nimport axios from 'axios'; //asd\n\naxios.defaults.headers.common['Authorization'] = \"Bearer \".concat(localStorage.getItem(\"token\"));\nexport const getCity = () => async dispatch => {\n  await axios.get(\"http://localhost:5000/cities/\".concat(cityId));\n};\nexport const getCities = () => async dispatch => {\n  console.log('city Action');\n  console.log(localStorage.getItem(\"token\"));\n  dispatch(citiesLoading());\n  await axios.get('http://localhost:5000/cities/all', {\n    headers: {\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n    }\n  }).then(res => dispatch({\n    type: GET_CITIES,\n    payload: res.data\n  }));\n};\nexport const citiesLoading = () => {\n  return {\n    type: DATA_LOADING\n  };\n};\nexport const getItineraries = cityId => async dispatch => {\n  dispatch(itinerariesLoading(cityId));\n  await axios.get('http://localhost:5000/itineraries/' + cityId).then(res => dispatch({\n    type: GET_ITINERARIES,\n    payload: res.data\n  }));\n};\nexport const itinerariesLoading = () => {\n  return {\n    type: DATA_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/actions/cityActions.js"],"names":["GET_CITIES","DATA_LOADING","GET_ITINERARIES","GET_CITY","axios","defaults","headers","common","localStorage","getItem","getCity","dispatch","get","cityId","getCities","console","log","citiesLoading","Authorization","then","res","type","payload","data","getItineraries","itinerariesLoading"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,eAAnC,EAAoDC,QAApD,QAAoE,SAApE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,qBAA2DC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3D;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC3C,QAAMP,KAAK,CACNQ,GADC,wCACmCC,MADnC,EAAN;AAGH,CAJM;AAMP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMH,QAAN,IAAkB;AAC7CI,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYR,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAE,EAAAA,QAAQ,CAACM,aAAa,EAAd,CAAR;AACA,QAAMb,KAAK,CACNQ,GADC,CACG,kCADH,EACuC;AAAEN,IAAAA,OAAO,EAAE;AAAEY,MAAAA,aAAa,EAAE,YAAYV,YAAY,CAACC,OAAb,CAAqB,OAArB;AAA7B;AAAX,GADvC,EAEDU,IAFC,CAEIC,GAAG,IAAIT,QAAQ,CAAC;AAClBU,IAAAA,IAAI,EAAErB,UADY;AAElBsB,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CAFnB,CAAN;AAMH,CAVM;AAYP,OAAO,MAAMN,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHI,IAAAA,IAAI,EAAEpB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMuB,cAAc,GAAIX,MAAD,IAAY,MAAMF,QAAN,IAAkB;AACxDA,EAAAA,QAAQ,CAACc,kBAAkB,CAACZ,MAAD,CAAnB,CAAR;AACA,QAAMT,KAAK,CACNQ,GADC,CACG,uCAAuCC,MAD1C,EAEDM,IAFC,CAEIC,GAAG,IAAIT,QAAQ,CAAC;AAClBU,IAAAA,IAAI,EAAEnB,eADY;AAElBoB,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CAFnB,CAAN;AAMH,CARM;AAUP,OAAO,MAAME,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHJ,IAAAA,IAAI,EAAEpB;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { GET_CITIES, DATA_LOADING, GET_ITINERARIES, GET_CITY } from './types';\r\nimport axios from 'axios';\r\n//asd\r\naxios.defaults.headers.common['Authorization'] = `Bearer ${localStorage.getItem(\"token\")}`;\r\n\r\nexport const getCity = () => async dispatch => {\r\n    await axios\r\n        .get(`http://localhost:5000/cities/${cityId}`)\r\n        \r\n}\r\n\r\nexport const getCities = () => async dispatch => {\r\n    console.log('city Action');\r\n    console.log(localStorage.getItem(\"token\"));\r\n    dispatch(citiesLoading()); \r\n    await axios\r\n        .get('http://localhost:5000/cities/all', { headers: { Authorization: \"Bearer \" + localStorage.getItem(\"token\") }})\r\n        .then(res => dispatch({\r\n            type: GET_CITIES,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const citiesLoading = () => {\r\n    return {\r\n        type: DATA_LOADING \r\n    }\r\n}\r\n\r\nexport const getItineraries = (cityId) => async dispatch => {\r\n    dispatch(itinerariesLoading(cityId));\r\n    await axios\r\n        .get('http://localhost:5000/itineraries/' + cityId)\r\n        .then(res => dispatch({\r\n            type: GET_ITINERARIES,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const itinerariesLoading = () => {\r\n    return {\r\n        type: DATA_LOADING \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}