{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\ItinerariesPage\\\\ItinerariesPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner, ListGroup } from 'reactstrap'; // actions importadas\n\nimport { getItineraries, getCity } from '../../actions/cityActions';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport Footer from '../Footer/Footer';\nimport ItinerariesList from '../ItinerariesList/ItinerariesList';\nimport ItineraryBox from '../ItineraryBox/ItineraryBox';\nimport CityBox from '../CityBox/CityBox';\n\nclass ItinerariesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: [],\n      loading: false,\n      city: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getItineraries(this.props.match.params.cityId);\n    await this.props.getCity(this.props.match.params.cityId);\n    this.setState({\n      itineraries: this.props.itineraries,\n      loading: this.props.loading\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"itinerariesPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(CityBox, {\n      city: this.props.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      id: \"citiesList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.state.itineraries.map(itinerary => React.createElement(ItineraryBox, {\n      key: itinerary._id,\n      itinerary: itinerary,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    itineraries: state.cityReducer.itineraries,\n    loading: state.cityReducer.loading,\n    city: state.cityReducer.city\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId)),\n    getCity: cityId => dispatch(getCity(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItinerariesPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/ItinerariesPage/ItinerariesPage.js"],"names":["React","connect","Spinner","ListGroup","getItineraries","getCity","AppNavBar","Footer","ItinerariesList","ItineraryBox","CityBox","ItinerariesPage","Component","constructor","props","state","itineraries","loading","city","componentDidMount","match","params","cityId","setState","render","map","itinerary","_id","mapStateToProps","cityReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,YAAnC,C,CACA;;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,2BAAxC;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,eAAN,SAA8BX,KAAK,CAACY,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,OAAO,EAAE,KAFA;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAKH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAM,KAAKL,KAAL,CAAWV,cAAX,CAA0B,KAAKU,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,MAAlD,CAAN;AACA,UAAM,KAAKR,KAAL,CAAWT,OAAX,CAAmB,KAAKS,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,MAA3C,CAAN;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WADd;AAEVC,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAFV,KAAd;AAIH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWI,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,SAAD;AAAW,MAAA,EAAE,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWC,WAAX,CAAuBS,GAAvB,CAA6BC,SAAD,IACzB,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,SAAS,CAACC,GAA7B;AAAkC,MAAA,SAAS,EAAED,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CAHA,EAOA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,CADJ;AAWH;;AA/ByC;;AAkC9C,MAAME,eAAe,GAAGb,KAAK,IAAI;AAC7B;AACA,SAAO;AACHC,IAAAA,WAAW,EAAED,KAAK,CAACc,WAAN,CAAkBb,WAD5B;AAEHC,IAAAA,OAAO,EAAEF,KAAK,CAACc,WAAN,CAAkBZ,OAFxB;AAGHC,IAAAA,IAAI,EAAEH,KAAK,CAACc,WAAN,CAAkBX;AAHrB,GAAP;AAKH,CAPD;;AASA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH3B,IAAAA,cAAc,EAAGkB,MAAD,IAAYS,QAAQ,CAAC3B,cAAc,CAACkB,MAAD,CAAf,CADjC;AAEHjB,IAAAA,OAAO,EAAGiB,MAAD,IAAYS,QAAQ,CAAC1B,OAAO,CAACiB,MAAD,CAAR;AAF1B,GAAP;AAIH,CALD;;AAOA,eAAerB,OAAO,CAAC2B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,eAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner, ListGroup } from 'reactstrap';\r\n// actions importadas\r\nimport { getItineraries, getCity } from '../../actions/cityActions';\r\n\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport ItinerariesList from '../ItinerariesList/ItinerariesList';\r\nimport ItineraryBox from '../ItineraryBox/ItineraryBox';\r\nimport CityBox from '../CityBox/CityBox';\r\n\r\nclass ItinerariesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itineraries: [],\r\n            loading: false,\r\n            city: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getItineraries(this.props.match.params.cityId);\r\n        await this.props.getCity(this.props.match.params.cityId);\r\n        this.setState({ \r\n            itineraries: this.props.itineraries,\r\n            loading: this.props.loading\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return( \r\n            <div className=\"itinerariesPage\">\r\n            <AppNavBar/>\r\n            <CityBox city={this.props.city}/>\r\n            <ListGroup id=\"citiesList\"> \r\n                {this.state.itineraries.map( (itinerary) => \r\n                    <ItineraryBox key={itinerary._id} itinerary={itinerary}/> )}              \r\n            </ListGroup>\r\n            <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        itineraries: state.cityReducer.itineraries,\r\n        loading: state.cityReducer.loading,\r\n        city: state.cityReducer.city\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getItineraries: (cityId) => dispatch(getItineraries(cityId)),\r\n        getCity: (cityId) => dispatch(getCity(cityId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItinerariesPage);"]},"metadata":{},"sourceType":"module"}