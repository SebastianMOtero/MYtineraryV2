{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\CreateAccountPage\\\\CreateAccountPage.js\";\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport Footer from '../Footer/Footer';\nimport './CreateAccountPage.css';\nimport { createAccount } from '../../actions/userActions';\n\nclass CreateAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeData = () => {};\n\n    this.create = data => {\n      this.props.createAccount(data);\n    };\n\n    this.state = {\n      ussr: {\n        firstName: \"Fernando\",\n        lastName: \"Barreira\",\n        username: \"FerBar\",\n        password: \"qwer4321\",\n        email: \"Fer@gmail.com\"\n      }\n    };\n  }\n\n  //Tip: your component state should store all the input field values and dispatch an action only when the user clicks on submit.\n  //username, password, email, firstname, lastname, profilePic, country voy a recolectar\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"firstName\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"lastName\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"username\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"country\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      check: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.create(this.state.ussr),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {};\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createAccount: userData => dispatch(createAccount(userData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/CreateAccountPage/CreateAccountPage.js"],"names":["React","Col","Button","Form","FormGroup","Label","Input","FormText","connect","AppNavBar","Footer","createAccount","CreateAccountPage","Component","constructor","props","onChangeData","create","data","state","ussr","firstName","lastName","username","password","email","render","size","mapStateToProps","mapDispatchToProps","dispatch","userData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport Footer from '../Footer/Footer';\r\nimport './CreateAccountPage.css'\r\n\r\nimport { createAccount } from '../../actions/userActions';\r\n\r\nclass CreateAccountPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ussr : {\r\n                firstName: \"Fernando\",\r\n                lastName: \"Barreira\",\r\n                username: \"FerBar\",\r\n                password: \"qwer4321\",\r\n                email: \"Fer@gmail.com\"\r\n            }\r\n        }\r\n    }\r\n    onChangeData= () => {\r\n        \r\n    }\r\n    create = (data) => {\r\n        this.props.createAccount(data)\r\n    }\r\n    //Tip: your component state should store all the input field values and dispatch an action only when the user clicks on submit.\r\n    //username, password, email, firstname, lastname, profilePic, country voy a recolectar\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavBar/>\r\n                <div>\r\n\r\n                <Form>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"firstName\" sm={2}>First Name</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"lastName\" sm={2}>Last Name</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"username\" sm={2}>Username</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"password\" sm={2}>Password</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"email\" sm={2}>Email</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"country\" sm={2}>Country</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"country\" id=\"country\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    {/* <FormGroup row>\r\n                        <Label for=\"exampleSelectMulti\" sm={2}>Select Multiple</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"exampleText\" sm={2}>Text Area</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"exampleFile\" sm={2}>File</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\r\n                        <FormText color=\"muted\">\r\n                            This is some placeholder block-level help text for the above input.\r\n                            It's a bit lighter and easily wraps to a new line.\r\n                        </FormText>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup tag=\"fieldset\" row>\r\n                        <legend className=\"col-form-label col-sm-2\">Radio Buttons</legend>\r\n                        <Col sm={10}>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                            Option one is this and that—be sure to include why it's great\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio2\" />{' '}\r\n                            Option two can be something else and selecting it will deselect option one\r\n                            </Label>\r\n                        </FormGroup>\r\n                        <FormGroup check disabled>\r\n                            <Label check>\r\n                            <Input type=\"radio\" name=\"radio2\" disabled />{' '}\r\n                            Option three is disabled\r\n                            </Label>\r\n                        </FormGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"checkbox2\" sm={2}>Checkbox</Label>\r\n                        <Col sm={{ size: 10 }}>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\r\n                            Check me out\r\n                            </Label>\r\n                        </FormGroup>\r\n                        </Col>\r\n                    </FormGroup> */}\r\n                    <FormGroup check row >\r\n                        <Col sm={{ size: 10 }}>\r\n                        <Button onClick={this.create(this.state.ussr)}>Submit</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        \r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createAccount: (userData) => dispatch(createAccount(userData)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountPage);\r\n"]},"metadata":{},"sourceType":"module"}