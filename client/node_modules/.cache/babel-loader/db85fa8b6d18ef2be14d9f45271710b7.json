{"ast":null,"code":"import { CREATE_ACCOUNT, LOG_IN, LOG_OUT, LOG_IN_GOOGLE, LOGIN_SUCCESS, ADD_FAVOURITE, REM_FAVOURITE } from './types';\nimport axios from 'axios';\nexport const addFavourite = () => async dispatch => {\n  await axios.post().then(res => dispatch({\n    type: ADD\n  }));\n};\nexport const remFavourite = () => async dispatch => {};\nexport const createAccount = userData => async dispatch => {\n  console.log(userData);\n  await axios.post('http://localhost:5000/users/signup', userData).then(res => dispatch({\n    type: CREATE_ACCOUNT,\n    payload: res.data\n  })).catch(err => console.log(err));\n};\nexport const logIn = userData => async dispatch => {\n  await axios.post('http://localhost:5000/users/login', userData).then(res => {\n    dispatch({\n      type: LOG_IN,\n      payload: res\n    });\n  });\n};\nexport const logInGoogle = userData => async dispatch => {\n  dispatch({\n    type: LOG_IN_GOOGLE,\n    payload: userData\n  });\n};\nexport const logOut = () => async dispatch => {\n  console.log(\"LOGOUT\");\n  dispatch({\n    type: LOG_OUT\n  });\n}; //RECIBE TOKEN, LO MANDA AL BACK PARA COMPROBAR Y TRAE USUARIO QUE LE PERTENEZCA TOKEN\n\nexport const IdentifyUser = token => async dispatch => {\n  await axios.get('http://localhost:5000/users/identifyuser', {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(({\n    data\n  }) => {\n    console.log(data);\n    console.log(token);\n    const user = {\n      user: data.data,\n      token: token\n    };\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: user\n    });\n  }).catch(err => {\n    console.log(err);\n  }); //User Loading\n  //     dispatch({\n  //       type: USER_LOADING\n  //     });\n  //     try {\n  //       const { data, status } = await axios.get(\n  //         'http://localhost/5001/api/users/user',\n  //         tokenConfig(getState)\n  //       );\n  //       dispatch({\n  //         type: USER_LOADED,\n  //         payload: data\n  //       });\n  //     } catch (error) {\n  //       dispatch(returnErrors(error.response.data, error.response.status));\n  //       dispatch({\n  //         type: AUTH_ERROR\n  //       });\n  //     }\n};","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/actions/userActions.js"],"names":["CREATE_ACCOUNT","LOG_IN","LOG_OUT","LOG_IN_GOOGLE","LOGIN_SUCCESS","ADD_FAVOURITE","REM_FAVOURITE","axios","addFavourite","dispatch","post","then","res","type","ADD","remFavourite","createAccount","userData","console","log","payload","data","catch","err","logIn","logInGoogle","logOut","IdentifyUser","token","get","headers","Authorization","user"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0CC,aAA1C,EAAyDC,aAAzD,EACQC,aADR,EACuBC,aADvB,QAC4C,SAD5C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,QAAMF,KAAK,CACNG,IADC,GAEDC,IAFC,CAEKC,GAAG,IAAIH,QAAQ,CAAC;AACnBI,IAAAA,IAAI,EAAEC;AADa,GAAD,CAFpB,CAAN;AAKH,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB,CAEnD,CAFM;AAIP,OAAO,MAAMO,aAAa,GAAIC,QAAD,IAAc,MAAMR,QAAN,IAAkB;AACzDS,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,QAAMV,KAAK,CACNG,IADC,CACI,oCADJ,EAC0CO,QAD1C,EAEDN,IAFC,CAEKC,GAAG,IAAIH,QAAQ,CAAC;AACnBI,IAAAA,IAAI,EAAEb,cADa;AAEnBoB,IAAAA,OAAO,EAAER,GAAG,CAACS;AAFM,GAAD,CAFpB,EAMDC,KANC,CAMOC,GAAD,IAASL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CANf,CAAN;AAOH,CATM;AAWP,OAAO,MAAMC,KAAK,GAAIP,QAAD,IAAc,MAAMR,QAAN,IAAkB;AACjD,QAAMF,KAAK,CACNG,IADC,CACI,mCADJ,EACyCO,QADzC,EAEDN,IAFC,CAEKC,GAAG,IAAI;AACVH,IAAAA,QAAQ,CAAC;AACTI,MAAAA,IAAI,EAAEZ,MADG;AAETmB,MAAAA,OAAO,EAAER;AAFA,KAAD,CAAR;AAGD,GAND,CAAN;AAOH,CARM;AAUP,OAAO,MAAMa,WAAW,GAAIR,QAAD,IAAc,MAAMR,QAAN,IAAkB;AACnDA,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEV,aADD;AAELiB,IAAAA,OAAO,EAAEH;AAFJ,GAAD,CAAR;AAIP,CALM;AAOP,OAAO,MAAMS,MAAM,GAAG,MAAM,MAAMjB,QAAN,IAAkB;AAAES,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAC5CV,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAAEX;AADD,GAAD,CAAR;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAMyB,YAAY,GAAIC,KAAD,IAAW,MAAMnB,QAAN,IAAkB;AACrD,QAAMF,KAAK,CACNsB,GADC,CACG,0CADH,EAEF;AACIC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,mBAAYH,KAAZ;AAFR;AADb,GAFE,EAQDjB,IARC,CAQK,CAAC;AAACU,IAAAA;AAAD,GAAD,KAAW;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACA,UAAMI,IAAI,GAAG;AACTA,MAAAA,IAAI,EAAEX,IAAI,CAACA,IADF;AAETO,MAAAA,KAAK,EAAEA;AAFE,KAAb;AAIAnB,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAET,aADD;AAELgB,MAAAA,OAAO,EAAEY;AAFJ,KAAD,CAAR;AAIH,GAnBC,EAoBDV,KApBC,CAoBOC,GAAD,IAAS;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,GAtBC,CAAN,CADqD,CAyBrD;AACJ;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG,CA7CI","sourcesContent":["import { CREATE_ACCOUNT, LOG_IN, LOG_OUT, LOG_IN_GOOGLE, LOGIN_SUCCESS,\r\n        ADD_FAVOURITE, REM_FAVOURITE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const addFavourite = () => async dispatch => {\r\n    await axios\r\n        .post()\r\n        .then( res => dispatch({\r\n            type: ADD\r\n        }))\r\n}\r\n\r\nexport const remFavourite = () => async dispatch => {\r\n\r\n}\r\n\r\nexport const createAccount = (userData) => async dispatch => {\r\n    console.log(userData);\r\n    await axios\r\n        .post('http://localhost:5000/users/signup', userData)\r\n        .then( res => dispatch({\r\n            type: CREATE_ACCOUNT,\r\n            payload: res.data\r\n        }))\r\n        .catch( (err) => console.log(err))\r\n}\r\n\r\nexport const logIn = (userData) => async dispatch => {\r\n    await axios\r\n        .post('http://localhost:5000/users/login', userData)\r\n        .then( res => {\r\n            dispatch({ \r\n            type: LOG_IN, \r\n            payload: res\r\n        })})\r\n}\r\n\r\nexport const logInGoogle = (userData) => async dispatch => {\r\n        dispatch({\r\n            type: LOG_IN_GOOGLE,\r\n            payload: userData\r\n        })\r\n}\r\n\r\nexport const logOut = () => async dispatch => { console.log(\"LOGOUT\");\r\n    dispatch({\r\n        type: LOG_OUT\r\n    })\r\n}\r\n\r\n//RECIBE TOKEN, LO MANDA AL BACK PARA COMPROBAR Y TRAE USUARIO QUE LE PERTENEZCA TOKEN\r\nexport const IdentifyUser = (token) => async dispatch => {\r\n    await axios\r\n        .get('http://localhost:5000/users/identifyuser',\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${token}`\r\n            }\r\n        })\r\n        .then( ({data})=> {\r\n            console.log(data);\r\n            console.log(token);\r\n            const user = {\r\n                user: data.data,\r\n                token: token\r\n            }\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: user\r\n            });\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err);\r\n        })\r\n    \r\n    //User Loading\r\n//     dispatch({\r\n//       type: USER_LOADING\r\n//     });\r\n  \r\n//     try {\r\n//       const { data, status } = await axios.get(\r\n//         'http://localhost/5001/api/users/user',\r\n//         tokenConfig(getState)\r\n//       );\r\n//       dispatch({\r\n//         type: USER_LOADED,\r\n//         payload: data\r\n//       });\r\n//     } catch (error) {\r\n//       dispatch(returnErrors(error.response.data, error.response.status));\r\n//       dispatch({\r\n//         type: AUTH_ERROR\r\n//       });\r\n//     }\r\n  };"]},"metadata":{},"sourceType":"module"}