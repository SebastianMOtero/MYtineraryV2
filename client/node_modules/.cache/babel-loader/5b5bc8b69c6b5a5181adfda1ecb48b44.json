{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\CreateAccountPage\\\\CreateAccountPage.js\";\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport Footer from '../Footer/Footer';\nimport './CreateAccountPage.css';\nimport { createAccount } from '../../actions/userActions';\n\nclass CreateAccountPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeData = e => {\n      var state = this.state;\n      state[e.target.name] = e.target.value;\n      this.setState(state);\n    };\n\n    this.onChangeImage = e => {\n      this.setState({\n        profilePic: e.target.files[0]\n      });\n    };\n\n    this.create = () => {\n      const fd = new FormData();\n      fd.append('firstName', this.state.firstName);\n      fd.append('lastName', this.state.lastName);\n      fd.append('password', this.state.password);\n      fd.append('username', this.state.username);\n      fd.append('email', this.state.email);\n      fd.append('profilePic', this.state.profilePic);\n      console.log(this.state.profilePic);\n      this.props.createAccount(fd);\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        username: \"\",\n        password: \"\",\n        email: \"\",\n        profilePic: null\n      });\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      password: \"\",\n      email: \"\",\n      profilePic: null\n    };\n  }\n\n  //Tip: your component state should store all the input field values and dispatch an action only when the user clicks on submit.\n  //username, password, email, firstname, lastname, profilePic, country voy a recolectar\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Create Account\"), React.createElement(Input, {\n      accept: \"image/*\",\n      className: classes.input,\n      id: \"contained-button-file\",\n      multiple: true,\n      type: \"file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form, {\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"username\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      value: this.state.username,\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"password\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      value: this.state.password,\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      value: this.state.email,\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"firstName\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      value: this.state.firstName,\n      type: \"text\",\n      name: \"firstName\",\n      id: \"firstName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"lastName\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Input, {\n      onChange: this.onChangeData,\n      value: this.state.lastName,\n      type: \"text\",\n      name: \"lastName\",\n      id: \"lastName\",\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      row: true,\n      className: \"formGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"country\",\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Country\"), React.createElement(Col, {\n      sm: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      name: \"country\",\n      id: \"country\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), \"//checkbox\", React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"profilePic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"File\"), React.createElement(Input, {\n      onChange: this.onChangeImage,\n      type: \"file\",\n      name: \"profilePic\",\n      id: \"profilePic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.\")), React.createElement(FormGroup, {\n      check: true,\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.create,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Submit\"))))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    status: state.userReducer.status\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createAccount: userData => dispatch(createAccount(userData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/CreateAccountPage/CreateAccountPage.js"],"names":["React","Col","Button","Form","FormGroup","Label","Input","FormText","connect","AppNavBar","Footer","createAccount","CreateAccountPage","Component","constructor","props","onChangeData","e","state","target","name","value","setState","onChangeImage","profilePic","files","create","fd","FormData","append","firstName","lastName","password","username","email","console","log","render","classes","input","size","mapStateToProps","status","userReducer","mapDispatchToProps","dispatch","userData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport './CreateAccountPage.css'\r\n\r\nimport { createAccount } from '../../actions/userActions';\r\n\r\nclass CreateAccountPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n                profilePic: null\r\n        }\r\n    }\r\n    onChangeData= (e) => {\r\n        var state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state)\r\n    }\r\n\r\n    onChangeImage = (e) => { \r\n        this.setState({\r\n            profilePic: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    create = () => {\r\n        const fd = new FormData();\r\n        fd.append('firstName', this.state.firstName)\r\n        fd.append('lastName', this.state.lastName)\r\n        fd.append('password', this.state.password)\r\n        fd.append('username', this.state.username)\r\n        fd.append('email', this.state.email)\r\n        fd.append('profilePic', this.state.profilePic);\r\n        console.log(this.state.profilePic);\r\n        this.props.createAccount(fd);\r\n        this.setState( {\r\n            firstName: \"\",\r\n                lastName: \"\",\r\n                username: \"\",\r\n                password: \"\",\r\n                email: \"\",\r\n                profilePic: null\r\n        })\r\n\r\n    }\r\n    //Tip: your component state should store all the input field values and dispatch an action only when the user clicks on submit.\r\n    //username, password, email, firstname, lastname, profilePic, country voy a recolectar\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavBar/>\r\n                <div>\r\n                <h1>Create Account</h1>\r\n                \r\n                \r\n                <Input accept=\"image/*\"\r\n        className={classes.input}\r\n        id=\"contained-button-file\"\r\n        multiple\r\n        type=\"file\"/>\r\n                {/* <Input onChange={this.onChangeImage}  type=\"file\" name=\"profilePic\" id=\"profilePic\" /> */}\r\n                \r\n                {/* </div> */}\r\n\r\n                <Form encType=\"multipart/form-data\" >\r\n                    \r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"username\" sm={2}>Username</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} value={this.state.username} type=\"text\" name=\"username\" id=\"username\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"password\" sm={2}>Password</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"email\" sm={2}>Email</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} value={this.state.email} type=\"email\" name=\"email\" id=\"email\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"firstName\" sm={2}>First Name</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} value={this.state.firstName} type=\"text\" name=\"firstName\" id=\"firstName\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"lastName\" sm={2}>Last Name</Label>\r\n                        <Col sm={10}>\r\n                        <Input onChange={this.onChangeData} value={this.state.lastName} type=\"text\" name=\"lastName\" id=\"lastName\" placeholder=\"\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup row className=\"formGroup\">\r\n                        <Label for=\"country\" sm={2}>Country</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"country\" id=\"country\" />\r\n                        </Col>\r\n                    </FormGroup>\r\n                   //checkbox\r\n                    <FormGroup>\r\n                        <Label  for=\"profilePic\">File</Label>\r\n                        <Input onChange={this.onChangeImage}  type=\"file\" name=\"profilePic\" id=\"profilePic\" />\r\n                        <FormText color=\"muted\">\r\n                        This is some placeholder block-level help text for the above input.\r\n                        It's a bit lighter and easily wraps to a new line.\r\n                        </FormText>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup check row >\r\n                        <Col sm={{ size: 10 }}>\r\n                        <Button onClick={this.create}>Submit</Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>\r\n                </div>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        status: state.userReducer.status\r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createAccount: (userData) => dispatch(createAccount(userData)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateAccountPage);\r\n"]},"metadata":{},"sourceType":"module"}