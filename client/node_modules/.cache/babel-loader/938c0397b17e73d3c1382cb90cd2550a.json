{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CITIES, DATA_LOADING, FILTER_CITIES } from '../actions/types';\nconst initialState = {\n  cities: [],\n  loading: false\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_CITIES:\n      return _objectSpread({}, state, {\n        cities: action.payload,\n        loading: false\n      });\n\n    case FILTER_CITIES:\n      return _objectSpread({}, state, {\n        cities: state.cities.filter(city => {\n          let cityName = city.name.toLowerCase();\n          return cityName.indexOf(action.toLowerCase()) === 0;\n        })\n      });\n\n    case DATA_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/reducers/cityReducer.js"],"names":["GET_CITIES","DATA_LOADING","FILTER_CITIES","initialState","cities","loading","state","action","type","payload","filter","city","cityName","name","toLowerCase","indexOf"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,aAAnC,QAAwD,kBAAxD;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,OAAO,EAAE;AAFQ,CAArB;AAKA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,UAAL;AACI,+BACOM,KADP;AAEIF,QAAAA,MAAM,EAAEG,MAAM,CAACE,OAFnB;AAGIJ,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKH,aAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaM,MAAb,CAAqBC,IAAD,IAAU;AAClC,cAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAf;AACA,iBAAOF,QAAQ,CAACG,OAAT,CACHR,MAAM,CAACO,WAAP,EADG,MACuB,CAD9B;AAEH,SAJO;AAFZ;;AAQJ,SAAKb,YAAL;AACI,+BACOK,KADP;AAEID,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOC,KAAP;AAtBR;AAwBH","sourcesContent":["import { GET_CITIES, DATA_LOADING, FILTER_CITIES } from '../actions/types';\r\n\r\nconst initialState = {\r\n    cities: [],\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: action.payload,\r\n                loading: false\r\n            };\r\n        case FILTER_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: state.cities.filter((city) => {\r\n                    let cityName = city.name.toLowerCase()\r\n                    return cityName.indexOf(\r\n                        action.toLowerCase()) === 0\r\n                })\r\n            }\r\n        case DATA_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}