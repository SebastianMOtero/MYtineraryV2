{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CREATE_ACCOUNT, LOG_OUT, LOG_IN, LOGIN_SUCCESS } from '../actions/types';\nconst initialState = {\n  isLogged: false,\n  user: [],\n  favourites: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CREATE_ACCOUNT:\n      console.log('reducer');\n      return _objectSpread({}, state);\n\n    case LOG_OUT:\n      localStorage.removeItem('token');\n      return _objectSpread({}, state, {\n        isLogged: false,\n        user: []\n      });\n\n    case LOG_IN:\n      localStorage.setItem('token', action.payload.data.token);\n      return _objectSpread({}, state, {\n        isLogged: action.payload.status == 200\n      });\n\n    case LOGIN_SUCCESS:\n      console.log(action.payload);\n      localStorage.setItem('token', action.payload.token);\n      console.log(action.payload.user);\n      return _objectSpread({}, state, {\n        user: action.payload.user,\n        isLogged: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/reducers/userReducer.js"],"names":["CREATE_ACCOUNT","LOG_OUT","LOG_IN","LOGIN_SUCCESS","initialState","isLogged","user","favourites","state","action","type","console","log","localStorage","removeItem","setItem","payload","data","token","status"],"mappings":";;;;;;AAAA,SAASA,cAAT,EAAyBC,OAAzB,EAAkCC,MAAlC,EAA0CC,aAA1C,QAA+D,kBAA/D;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAG,KADM;AAEjBC,EAAAA,IAAI,EAAE,EAFW;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGJ,YAAjB,EAA+BK,MAA/B,EAAuC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,cAAL;AACIW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,+BACOJ,KADP;;AAGA,SAAKP,OAAL;AACIY,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,+BACON,KADP;AAEIH,QAAAA,QAAQ,EAAE,KAFd;AAGIC,QAAAA,IAAI,EAAE;AAHV;;AAKJ,SAAKJ,MAAL;AACIW,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACO,OAAP,CAAeC,IAAf,CAAoBC,KAAlD;AACA,+BACOV,KADP;AAEIH,QAAAA,QAAQ,EAAGI,MAAM,CAACO,OAAP,CAAeG,MAAf,IAAyB;AAFxC;;AAIJ,SAAKhB,aAAL;AAAoBQ,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACO,OAAnB;AAChBH,MAAAA,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BN,MAAM,CAACO,OAAP,CAAeE,KAA7C;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACO,OAAP,CAAeV,IAA3B;AACA,+BACOE,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACO,OAAP,CAAeV,IAFzB;AAGID,QAAAA,QAAQ,EAAE;AAHd;;AAKR;AACI,aAAOG,KAAP;AA5BR;AA8BH","sourcesContent":["import { CREATE_ACCOUNT, LOG_OUT, LOG_IN, LOGIN_SUCCESS } from '../actions/types';\r\n\r\nconst initialState = {\r\n    isLogged : false,\r\n    user: [],\r\n    favourites: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_ACCOUNT:\r\n            console.log('reducer')\r\n            return {\r\n                ...state\r\n            };\r\n            case LOG_OUT:\r\n                localStorage.removeItem('token')\r\n                return {\r\n                    ...state,\r\n                    isLogged: false,\r\n                    user: []\r\n                }\r\n            case LOG_IN: \r\n                localStorage.setItem('token', action.payload.data.token);\r\n                return {\r\n                    ...state,\r\n                    isLogged: (action.payload.status == 200),\r\n                }\r\n            case LOGIN_SUCCESS: console.log(action.payload);\r\n                localStorage.setItem('token', action.payload.token);\r\n                console.log(action.payload.user)\r\n                return {\r\n                    ...state,\r\n                    user: action.payload.user,\r\n                    isLogged: true\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}