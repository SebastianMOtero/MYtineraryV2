{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\AppNavbar\\\\AppNavBar.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './AppNavBar.css';\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink } from 'reactstrap';\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport userIcon from '../../assets/images/userIcon.png';\nimport { logOut } from '../../actions/userActions';\n\nclass AppNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = () => this.state.setCollapsed(!this.state.collapsed);\n\n    this.state = {\n      collapsed: true,\n      setCollapsed: true,\n      isLogged: false\n    };\n  } // const [collapsed, setCollapsed] = useState(true);\n\n\n  // const isLogged = props.isLogged;\n  render() {\n    console.log('NAVBAR');\n    console.log(this.props.user);\n    return React.createElement(\"div\", {\n      className: \"AppNavBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, console.log(this.props.isLogged), React.createElement(Navbar, {\n      className: \"Navbar\",\n      color: \"faded\",\n      light: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(UncontrolledDropdown, {\n      nav: true,\n      inNavbar: true,\n      className: \"userIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      nav: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"image-cropper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"UserIconNavBar\",\n      src: this.props.isLogged ? 'http:localhost:5000/' + this.props.user.profilePic : userIcon,\n      alt: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }))), React.createElement(DropdownMenu, {\n      left: \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.isLogged ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.user.username), React.createElement(DropdownItem, {\n      divider: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })) : null, this.props.isLogged ? null : React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/createAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Create Account\")), React.createElement(DropdownItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.props.isLogged ? React.createElement(Link, {\n      to: \"/\",\n      onClick: this.props.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Log Out\") : React.createElement(Link, {\n      to: \"/LogIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Log In\")))), React.createElement(NavbarToggler, {\n      onClick: this.state.toggleNavbar,\n      className: \"mr-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Collapse, {\n      isOpen: !this.state.collapsed,\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      navbar: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/components/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Components\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"https://github.com/reactstrap/reactstrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"GitHub\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    isLogged: state.userReducer.isLogged,\n    user: state.userReducer.user\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => dispatch(logOut())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavBar);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/AppNavbar/AppNavBar.js"],"names":["React","useState","connect","Collapse","Navbar","NavbarToggler","Nav","NavItem","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","DropdownItem","Link","userIcon","logOut","AppNavBar","Component","constructor","props","toggleNavbar","state","setCollapsed","collapsed","isLogged","render","console","log","user","profilePic","username","mapStateToProps","userReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './AppNavBar.css'\r\nimport { Collapse, Navbar, NavbarToggler, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { UncontrolledDropdown,DropdownToggle,DropdownMenu,DropdownItem } from 'reactstrap';\r\nimport { Link } from  'react-router-dom';\r\nimport userIcon from '../../assets/images/userIcon.png';\r\n\r\nimport { logOut } from '../../actions/userActions';\r\n\r\nclass AppNavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n      setCollapsed: true,\r\n      isLogged: false,\r\n    }\r\n  }\r\n  // const [collapsed, setCollapsed] = useState(true);\r\n  toggleNavbar = () => this.state.setCollapsed(!this.state.collapsed);\r\n  \r\n  // const isLogged = props.isLogged;\r\n  render() { console.log('NAVBAR');console.log(this.props.user)\r\n    return ( \r\n      <div className = \"AppNavBar\"> \r\n      {/* <img src={process.env.PUBLIC_URL + this.props.user.profilePic} alt=\"logo\" /> */}\r\n        {console.log(this.props.isLogged)}\r\n          <Navbar className=\"Navbar\" color=\"faded\" light>\r\n            <UncontrolledDropdown nav inNavbar  className=\"userIcon\" >\r\n              <DropdownToggle nav>\r\n              <div class=\"image-cropper\">\r\n                <img className=\"UserIconNavBar\" \r\n                  src={ this.props.isLogged ? \r\n                  ('http:localhost:5000/' + this.props.user.profilePic) : userIcon} alt=\"User\" \r\n                />\r\n              </div>\r\n              </DropdownToggle>\r\n              <DropdownMenu left=\"true\">\r\n                {\r\n                  this.props.isLogged ? \r\n                  (\r\n                    <div>\r\n                      <DropdownItem>\r\n                          {this.props.user.username}\r\n                      </DropdownItem>\r\n                      <DropdownItem divider />\r\n                    </div>\r\n                  ) : (\r\n                    null\r\n                  )\r\n                }\r\n                {\r\n                  this.props.isLogged ? \r\n                  (\r\n                    null\r\n                  ) : (\r\n                    <DropdownItem>\r\n                      <Link to=\"/createAccount\">\r\n                              Create Account\r\n                      </Link>\r\n                    </DropdownItem>\r\n                  )\r\n                }\r\n                <DropdownItem> \r\n                  { this.props.isLogged ? (\r\n                    <Link to=\"/\" onClick={this.props.logOut}>\r\n                            Log Out\r\n                    </Link> \r\n                  ) : (\r\n                    <Link to=\"/LogIn\">\r\n                            Log In\r\n                    </Link>\r\n                  )\r\n                  }\r\n                </DropdownItem>\r\n                      {/* <DropdownItem divider />\r\n                      <DropdownItem>\r\n                      Reset\r\n                      </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n          {/* Boton perfil */}\r\n          {/* <NavbarBrand href=\"/\">MYtinerary</NavbarBrand> */}\r\n          {/* Boton Menu */}\r\n          <NavbarToggler onClick={this.state.toggleNavbar} className=\"mr-2\" />\r\n          <Collapse isOpen={!this.state.collapsed} navbar>\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\">Components</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\">GitHub</NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n          {/* Boton menu */}\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n  return {\r\n      isLogged: state.userReducer.isLogged,\r\n      user: state.userReducer.user\r\n  };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      logOut: () => dispatch(logOut()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavBar);\r\n\r\n"]},"metadata":{},"sourceType":"module"}