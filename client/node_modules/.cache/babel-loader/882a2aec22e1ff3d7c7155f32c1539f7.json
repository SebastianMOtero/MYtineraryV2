{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\ItineraryBox\\\\ItineraryBox.js\";\nimport React from 'react';\nimport { ListGroupItem } from 'reactstrap';\nimport { Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { expandItinerary } from '../../actions/itineraryActions';\nimport \"./ItineraryBox.css\";\nimport { Input, Label, FormGroup } from 'reactstrap'; // import { Row, Col } from 'react-bootstrap';\n\nimport OkComment from '../../assets/images/arrowEnter.png';\nimport favStar from '../../star.png';\nimport CommentBox from '../CommentBox/commentBox';\nimport CarrouselActivities from '../CarrouselActivities/carrouselActivities';\nimport { getActivities } from '../../actions/activityActions';\nimport { getComments, addComment } from '../../actions/commentAction';\nimport { addFavourite, remFavourite } from '../../actions/userActions';\n\nclass ItineraryBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showActivities = async () => {\n      await this.props.getActivities(this.props.itinerary._id);\n      this.props.expandItinerary();\n      this.setState({\n        isExpanded: !this.state.isExpanded\n      });\n      console.log(this.state.isExpanded);\n      await this.props.getComments(this.props.itinerary._id);\n      this.setState({\n        comments: this.props.comments\n      });\n      console.log(this.state.comments);\n    };\n\n    this.handleFav = async () => {\n      // console.log(this.props.user.favourites);\n      console.log(this.state.favourites);\n\n      if (this.props.isLogged && this.props.favourites != undefined) {\n        if (this.props.favourites.includes(this.props.itinerary._id)) {\n          //es fav\n          console.log('es fav');\n          this.props.remFavourite();\n        } else {\n          //no es fav\n          console.log('no es fav');\n          this.props.addFavourite;\n        }\n      } // this.state.user.favourites\n\n    };\n\n    this.eHandleShowActivities = async () => {\n      console.log('show activities');\n      console.log(this.props.itinerary._id);\n      await this.props.getActivities(this.props.itinerary._id); // this.setState({\n      //     activites: this.props.activities\n      // })\n      // console.log(this.props)\n      // console.log(this.state)\n    };\n\n    this.eHandleBoxComment = e => {\n      if (this.props.isLogged) {\n        this.setState({\n          addComment: e.target.value\n        });\n        let asd = this.props.favourites;\n        this.setState({\n          favourites: asd\n        });\n      }\n    };\n\n    this.eHandleOkComment = async () => {\n      console.log(this.state.addComment);\n      let data = {\n        itineraryId: this.props.itinerary._id,\n        comment: this.state.addComment,\n        username: this.props.username\n      };\n\n      if (this.props.isLogged) {\n        await this.props.addComment(data);\n        document.getElementById(\"InputComments\").value = \"\";\n      } else {\n        alert(\"No esta logueado\");\n      } // this.setState({\n      //     item: \"\"\n      // })\n\n    };\n\n    this.state = {\n      isExpanded: false,\n      activities: [],\n      comments: [],\n      addComment: \"\",\n      username: \"\",\n      favourites: []\n    };\n  }\n\n  // componentDidMount() {\n  //     if (this.props.favourites != undefined) {\n  //         this.setState({favourites: this.props.favourites})\n  //     }\n  //     console.log(this.state.favourites.includes(this.props.itineraryId))\n  // }\n  render() {\n    console.log(this.props.favourites);\n    console.log(this.props.itinerary._id);\n    return React.createElement(\"div\", {\n      className: \"ItineraryBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ListGroupItem, {\n      className: \"ItineraryBoxList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Row, {\n      id: \"ItineraryprofilePic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"prorfilePic\"), React.createElement(Row, {\n      id: \"ItineraryprofileName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.itinerary.username)), React.createElement(Col, {\n      xs: 9,\n      id: \"ItineraryColumnData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Row, {\n      id: \"ItineraryTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.props.itinerary.mytineraryName), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Col, {\n      id: \"ItineraryLikes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Likes: \", this.props.itinerary.rating), React.createElement(Col, {\n      id: \"ItineraryDuration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.props.itinerary.duration, \" hours\"), React.createElement(Col, {\n      id: \"ItineraryPrice\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.props.itinerary.price)), React.createElement(Row, {\n      id: \"ItineraryHashtagList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.props.itinerary.hashtag.map(hashtag => React.createElement(\"div\", {\n      id: \"ItineraryHashtag\",\n      key: hashtag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"#\", hashtag))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, !this.props.isLogged || this.props.favourites == undefined ? React.createElement(\"img\", {\n      id: \"favIcon\",\n      style: {\n        backgroundColor: '#FAEBD7'\n      },\n      onClick: this.handleFav,\n      src: favStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : this.props.favourites.includes(this.props.itinerary._id) ? React.createElement(\"img\", {\n      id: \"favIcon\",\n      style: {\n        backgroundColor: '#ffff00'\n      },\n      onClick: this.handleFav,\n      src: favStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      id: \"favIcon\",\n      style: {\n        backgroundColor: '#ffffff'\n      },\n      onClick: this.handleFav,\n      src: favStar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.isExpanded === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, console.log(this.props.activities), React.createElement(CarrouselActivities, {\n      activities: this.props.activities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(FormGroup, {\n      className: \"formgrupo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Comments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Comments\"), this.state.comments.map(x => React.createElement(CommentBox, {\n      key: x._id,\n      comment: x,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"textarea\",\n      name: \"text\",\n      id: \"InputComments\",\n      onChange: this.eHandleBoxComment,\n      name: \"boxComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: OkComment,\n      onClick: this.eHandleOkComment,\n      className: \"ArrowEnter\",\n      alt: \"Enter\",\n      name: \"addComment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))))), React.createElement(\"button\", {\n      onClick: this.showActivities,\n      id: \"ButtonViewAll\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" \", this.state.isExpanded ? 'close' : 'v View All v')))));\n  }\n\n} //expandItinerary()\n\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    // isExpanded: state.itineraryReducer.isExpanded,\n    // activities: state.activityReducer\n    activities: state.activityReducer.activities,\n    comments: state.commentReducer.comments,\n    username: state.userReducer.user.username,\n    favourites: state.userReducer.user.favourites,\n    isLogged: state.userReducer.isLogged\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    expandItinerary: () => dispatch(expandItinerary()),\n    getActivities: itineraryId => dispatch(getActivities(itineraryId)),\n    getComments: itineraryId => dispatch(getComments(itineraryId)),\n    addComment: data => dispatch(addComment(data)),\n    // getFavourites: (userId) => dispatch(getFavourites(userId))\n    addFavourite: data => dispatch(addFavourite(data)),\n    remFavourite: data => dispatch(remFavourite(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryBox); // export default  ItineraryBox;","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/ItineraryBox/ItineraryBox.js"],"names":["React","ListGroupItem","Row","Col","connect","expandItinerary","Input","Label","FormGroup","OkComment","favStar","CommentBox","CarrouselActivities","getActivities","getComments","addComment","addFavourite","remFavourite","ItineraryBox","Component","constructor","props","showActivities","itinerary","_id","setState","isExpanded","state","console","log","comments","handleFav","favourites","isLogged","undefined","includes","eHandleShowActivities","eHandleBoxComment","e","target","value","asd","eHandleOkComment","data","itineraryId","comment","username","document","getElementById","alert","activities","render","mytineraryName","rating","duration","price","hashtag","map","backgroundColor","x","mapStateToProps","activityReducer","commentReducer","userReducer","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListGroupItem } from 'reactstrap';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { expandItinerary } from '../../actions/itineraryActions'\r\nimport \"./ItineraryBox.css\";\r\nimport { Input, Label, FormGroup } from 'reactstrap';\r\n// import { Row, Col } from 'react-bootstrap';\r\nimport OkComment from '../../assets/images/arrowEnter.png'\r\nimport favStar from '../../star.png';\r\nimport CommentBox from '../CommentBox/commentBox';\r\n\r\nimport CarrouselActivities from '../CarrouselActivities/carrouselActivities';\r\nimport { getActivities } from '../../actions/activityActions';\r\nimport { getComments, addComment } from '../../actions/commentAction'\r\nimport { addFavourite, remFavourite } from '../../actions/userActions';\r\n\r\nclass ItineraryBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isExpanded: false,\r\n            activities: [],\r\n            comments: [],\r\n            addComment: \"\",\r\n            username: \"\",\r\n            favourites: []\r\n        }\r\n    }\r\n\r\n    showActivities = async () => {\r\n        await this.props.getActivities(this.props.itinerary._id);\r\n        this.props.expandItinerary();\r\n        this.setState({isExpanded: !this.state.isExpanded})\r\n        console.log(this.state.isExpanded)\r\n        await this.props.getComments(this.props.itinerary._id);\r\n        this.setState({comments: this.props.comments});\r\n        console.log(this.state.comments)\r\n    }\r\n\r\n    handleFav = async () => {\r\n        // console.log(this.props.user.favourites);\r\n        console.log(this.state.favourites)\r\n        if (this.props.isLogged && this.props.favourites !=undefined) {\r\n            if (this.props.favourites.includes(this.props.itinerary._id)) {\r\n                //es fav\r\n                console.log('es fav')\r\n                this.props.remFavourite()\r\n\r\n            } else {\r\n                //no es fav\r\n                console.log('no es fav')\r\n                this.props.addFavourite\r\n            }\r\n        }\r\n        // this.state.user.favourites\r\n    }\r\n\r\n    \r\n\r\n    eHandleShowActivities = async () => {\r\n        console.log('show activities')\r\n        console.log(this.props.itinerary._id)\r\n        await this.props.getActivities(this.props.itinerary._id);\r\n        // this.setState({\r\n        //     activites: this.props.activities\r\n        // })\r\n        // console.log(this.props)\r\n        // console.log(this.state)\r\n        \r\n    }\r\n    \r\n    eHandleBoxComment = (e) => {\r\n        if (this.props.isLogged) {\r\n            this.setState({addComment: e.target.value})\r\n            let asd =this.props.favourites\r\n            this.setState({favourites: asd})\r\n        }\r\n    }\r\n\r\n    eHandleOkComment = async() => {\r\n        console.log(this.state.addComment)\r\n        let data= {\r\n            itineraryId: this.props.itinerary._id,\r\n            comment: this.state.addComment,\r\n            username: this.props.username\r\n        }\r\n        if (this.props.isLogged) {\r\n            await this.props.addComment(data);\r\n            document.getElementById(\"InputComments\").value=\"\"; \r\n        } else {\r\n            alert(\"No esta logueado\");\r\n        }\r\n   \r\n        // this.setState({\r\n        //     item: \"\"\r\n        // })\r\n    }\r\n    // componentDidMount() {\r\n    //     if (this.props.favourites != undefined) {\r\n    //         this.setState({favourites: this.props.favourites})\r\n    //     }\r\n    //     console.log(this.state.favourites.includes(this.props.itineraryId))\r\n    // }\r\n    render() {\r\n        console.log( this.props.favourites);\r\n        console.log( this.props.itinerary._id)\r\n        return (\r\n            <div className=\"ItineraryBox\">\r\n                {/* <Link to = {{ pathname: \"/cities/\" + this.props.city._id }}> */}\r\n                    <ListGroupItem className = \"ItineraryBoxList\">\r\n\r\n                    <Row >\r\n                    <Col xs={3}>\r\n                        <Row id=\"ItineraryprofilePic\">\r\n                            prorfilePic\r\n                        </Row>\r\n                        <Row id=\"ItineraryprofileName\">\r\n                            {this.props.itinerary.username}\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs={9} id=\"ItineraryColumnData\">\r\n                        <Row id=\"ItineraryTitle\">\r\n                            {this.props.itinerary.mytineraryName}\r\n                        </Row>\r\n                        <Row>\r\n                            <Col id=\"ItineraryLikes\">\r\n                                Likes: {this.props.itinerary.rating}\r\n                            </Col>\r\n                            <Col id=\"ItineraryDuration\">\r\n                                {this.props.itinerary.duration} hours\r\n                            </Col>\r\n                            <Col id=\"ItineraryPrice\">\r\n                                {this.props.itinerary.price}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row id=\"ItineraryHashtagList\">\r\n                            <Col>\r\n                                {this.props.itinerary.hashtag.map( hashtag => <div id=\"ItineraryHashtag\" key={hashtag} >#{hashtag}</div>)}\r\n                            </Col>\r\n\r\n                            <Col>\r\n                            {\r\n                               \r\n                                !this.props.isLogged || this.props.favourites==undefined ? \r\n                                <img id=\"favIcon\" style={{backgroundColor: '#FAEBD7'}} onClick={this.handleFav} src={favStar}/> :\r\n                                (\r\n                                    \r\n                                    this.props.favourites.includes(this.props.itinerary._id) ? \r\n                                    <img id=\"favIcon\" style={{backgroundColor: '#ffff00'}} onClick={this.handleFav} src={favStar}/> :\r\n                                    <img id=\"favIcon\" style={{backgroundColor: '#ffffff'}} onClick={this.handleFav} src={favStar}/>\r\n                                )\r\n                            }\r\n                                {/* {this.props.favourites.includes(this.props.itinerary._id) ? \r\n                                <img id=\"favIcon\" style={{backgroundColor: '#ffff00'}} onClick={this.handleFav} src={favStar}/> :\r\n                                <img id=\"favIcon\" style={{backgroundColor: '#ffffff'}} onClick={this.handleFav} src={favStar}/>\r\n                                } */}\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        {\r\n                            this.state.isExpanded === true && \r\n                            <div>\r\n                                {/* {this.eHandleShowActivities()} */}\r\n                                {console.log(this.props.activities)}\r\n                            <CarrouselActivities activities={this.props.activities}/>\r\n                            <FormGroup className='formgrupo'>\r\n                                <Label for=\"Comments\">Comments</Label>\r\n                                \r\n                                {this.state.comments.map( x => <CommentBox key={x._id} comment={x} /> )}\r\n                                \r\n                                <Row>\r\n                                    <Col xs={10} >\r\n                                        <Input type=\"textarea\"  name=\"text\" id=\"InputComments\" onChange={this.eHandleBoxComment} name=\"boxComment\"/>\r\n                                    </Col>\r\n                                    <Col xs={2}>\r\n                                        <img src={OkComment} onClick={this.eHandleOkComment} className=\"ArrowEnter\" alt=\"Enter\" name=\"addComment\"/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            </div>\r\n                        }\r\n\r\n                        <button onClick={this.showActivities} \r\n                                id=\"ButtonViewAll\"> {this.state.isExpanded ? 'close' : 'v View All v'}</button>\r\n                    </Col>\r\n                </Row>\r\n\r\n                        {/* <h5>{this.props.itinerary.title}</h5> */}\r\n                    </ListGroupItem> \r\n                {/* </Link> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//expandItinerary()\r\nconst mapStateToProps = (state) => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        // isExpanded: state.itineraryReducer.isExpanded,\r\n        // activities: state.activityReducer\r\n        activities: state.activityReducer.activities,\r\n        comments: state.commentReducer.comments,\r\n        username: state.userReducer.user.username,\r\n        favourites: state.userReducer.user.favourites,\r\n        isLogged: state.userReducer.isLogged\r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        expandItinerary: () => dispatch(expandItinerary()),\r\n        getActivities: (itineraryId) => dispatch(getActivities(itineraryId)),\r\n        getComments: (itineraryId) => dispatch(getComments(itineraryId)),\r\n        addComment: (data) => dispatch(addComment(data)),\r\n        // getFavourites: (userId) => dispatch(getFavourites(userId))\r\n        addFavourite: (data) => dispatch(addFavourite(data)),\r\n        remFavourite: (data) => dispatch(remFavourite(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryBox);\r\n// export default  ItineraryBox;"]},"metadata":{},"sourceType":"module"}