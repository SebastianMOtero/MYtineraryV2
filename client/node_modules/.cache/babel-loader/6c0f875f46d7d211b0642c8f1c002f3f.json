{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\CitiesPage\\\\Cities.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ListGroup, Label, Input } from 'reactstrap';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport CityBox from '../CityBox/CityBox';\nimport './Cities.css'; // actions importadas\n\nimport { getCities } from '../../actions/cityActions';\n\nclass CitiesPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.filterCities = e => {\n      console.log('asd');\n      let filteredCities = this.props.cities;\n      console.log(filteredCities);\n      filteredCities = filteredCities.filter(city => {\n        let cityName = city.name.toLowerCase();\n        return cityName.indexOf(e.target.value.toLowerCase()) === 0;\n      });\n      this.setState({\n        cities: filteredCities\n      });\n    };\n\n    this.state = {\n      cities: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getCities(); // llamo a la funcion que genera como prop en el dispatch\n  }\n\n  // filterCities = (e) => {\n  //     let filteredCities = this.props.cities; //recibo las\n  //     filteredCities = filteredCities.filter((city) => {\n  //       let cityName = city.name.toLowerCase() + city.country.toLowerCase()\n  //       return cityName.indexOf(\n  //         e.target.value.toLowerCase()) === 0\n  //     })\n  //     this.setState({\n  //       filteredCities: filteredCities\n  //     })\n  //   }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Input, {\n      type: \"text\",\n      name: \"cityFilter\",\n      id: \"cityFilter\",\n      placeholder: \"Search your city...\",\n      onChange: this.filterCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.cities.map(city => React.createElement(CityBox, {\n      city: city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\n  return {\n    cities: state.cities.cities\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(getCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/CitiesPage/Cities.js"],"names":["React","connect","ListGroup","Label","Input","AppNavBar","CityBox","getCities","CitiesPage","Component","constructor","props","filterCities","e","console","log","filteredCities","cities","filter","city","cityName","name","toLowerCase","indexOf","target","value","setState","state","componentDidMount","render","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,KAApB,EAA2BC,KAA3B,QAAwC,YAAxC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,cAAP,C,CAEA;;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;;AADgB,SAYpBC,YAZoB,GAYJC,CAAD,IAAO;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACpB,UAAIC,cAAc,GAAG,KAAKL,KAAL,CAAWM,MAAhC;AAAwCH,MAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ;AACxCA,MAAAA,cAAc,GAAGA,cAAc,CAACE,MAAf,CAAwBC,IAAD,IAAU;AAC9C,YAAIC,QAAQ,GAAGD,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAf;AACA,eAAOF,QAAQ,CAACG,OAAT,CAAkBV,CAAC,CAACW,MAAF,CAASC,KAAT,CAAeH,WAAf,EAAlB,MAAoD,CAA3D;AACH,OAHgB,CAAjB;AAIA,WAAKI,QAAL,CAAc;AACVT,QAAAA,MAAM,EAAED;AADE,OAAd;AAGH,KArBmB;;AAEhB,SAAKW,KAAL,GAAa;AACTV,MAAAA,MAAM,EAAE;AADC,KAAb;AAGH;;AAED,QAAMW,iBAAN,GAA0B;AACtB,UAAM,KAAKjB,KAAL,CAAWJ,SAAX,EAAN,CADsB,CACQ;AAEjC;;AAaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAsB,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,YAAxB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AACQ,MAAA,WAAW,EAAC,qBADpB;AAC0C,MAAA,QAAQ,EAAE,KAAKjB,YADzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWM,MAAX,CAAkBa,GAAlB,CAAwBX,IAAD,IAAU,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CADL,CAJJ,CADJ;AAUH;;AA/CoC;;AAkDzC,MAAMY,eAAe,GAAIJ,KAAD,IAAW;AAC/B;AACA,SAAO;AACHV,IAAAA,MAAM,EAAEU,KAAK,CAACV,MAAN,CAAaA;AADlB,GAAP;AAGH,CALD,C,CAOA;;;AACA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH1B,IAAAA,SAAS,EAAE,MAAM0B,QAAQ,CAAC1B,SAAS,EAAV;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAAC8B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CxB,UAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListGroup, Label, Input } from 'reactstrap';\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport CityBox from '../CityBox/CityBox';\r\nimport './Cities.css';\r\n\r\n// actions importadas\r\nimport { getCities } from '../../actions/cityActions';\r\n\r\nclass CitiesPage extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cities: [],\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getCities(); // llamo a la funcion que genera como prop en el dispatch\r\n\r\n    }\r\n\r\n    filterCities = (e) => { console.log('asd')\r\n        let filteredCities = this.props.cities; console.log(filteredCities)\r\n        filteredCities = filteredCities.filter( (city) => {\r\n            let cityName = city.name.toLowerCase()\r\n            return cityName.indexOf( e.target.value.toLowerCase()) === 0\r\n        })\r\n        this.setState({ \r\n            cities: filteredCities\r\n        })\r\n    }\r\n\r\n    // filterCities = (e) => {\r\n    //     let filteredCities = this.props.cities; //recibo las\r\n    //     filteredCities = filteredCities.filter((city) => {\r\n    //       let cityName = city.name.toLowerCase() + city.country.toLowerCase()\r\n    //       return cityName.indexOf(\r\n    //         e.target.value.toLowerCase()) === 0\r\n    //     })\r\n    //     this.setState({\r\n    //       filteredCities: filteredCities\r\n    //     })\r\n    //   }\r\n\r\n    render() {   \r\n        return(\r\n            <div>  \r\n                <AppNavBar/>\r\n                <Input type=\"text\" name=\"cityFilter\" id=\"cityFilter\" \r\n                        placeholder=\"Search your city...\" onChange={this.filterCities}/>\r\n                <ListGroup>\r\n                    {this.props.cities.map( (city) => <CityBox city={city}/> )}              \r\n                </ListGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\r\n    return {\r\n        cities: state.cities.cities,\r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(getCities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);\r\n"]},"metadata":{},"sourceType":"module"}