{"ast":null,"code":"import { GET_CITIES, DATA_LOADING, GET_ITINERARIES } from './types';\nimport axios from 'axios';\nexport const getCities = () => async dispatch => {\n  dispatch(citiesLoading());\n  await axios.get('http://localhost:5000/cities/all', {\n    headers: {}\n  }).then(res => dispatch({\n    type: GET_CITIES,\n    payload: res.data\n  }));\n};\nexport const citiesLoading = () => {\n  return {\n    type: DATA_LOADING\n  };\n};\nexport const getItineraries = cityId => async dispatch => {\n  dispatch(itinerariesLoading(cityId));\n  await axios.get('http://localhost:5000/itineraries/' + cityId).then(res => dispatch({\n    type: GET_ITINERARIES,\n    payload: res.data\n  }));\n};\nexport const itinerariesLoading = () => {\n  return {\n    type: DATA_LOADING\n  };\n};","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/actions/cityActions.js"],"names":["GET_CITIES","DATA_LOADING","GET_ITINERARIES","axios","getCities","dispatch","citiesLoading","get","headers","then","res","type","payload","data","getItineraries","cityId","itinerariesLoading"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,eAAnC,QAA0D,SAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7CA,EAAAA,QAAQ,CAACC,aAAa,EAAd,CAAR;AACA,QAAMH,KAAK,CACNI,GADC,CACG,kCADH,EAEF;AAACC,IAAAA,OAAO,EAAC;AAAT,GAFE,EAKDC,IALC,CAKIC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAEX,UADY;AAElBY,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CALnB,CAAN;AASH,CAXM;AAaP,OAAO,MAAMP,aAAa,GAAG,MAAM;AAC/B,SAAO;AACHK,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMa,cAAc,GAAIC,MAAD,IAAY,MAAMV,QAAN,IAAkB;AACxDA,EAAAA,QAAQ,CAACW,kBAAkB,CAACD,MAAD,CAAnB,CAAR;AACA,QAAMZ,KAAK,CACNI,GADC,CACG,uCAAuCQ,MAD1C,EAEDN,IAFC,CAEIC,GAAG,IAAIL,QAAQ,CAAC;AAClBM,IAAAA,IAAI,EAAET,eADY;AAElBU,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFK,GAAD,CAFnB,CAAN;AAMH,CARM;AAUP,OAAO,MAAMG,kBAAkB,GAAG,MAAM;AACpC,SAAO;AACHL,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM","sourcesContent":["import { GET_CITIES, DATA_LOADING, GET_ITINERARIES } from './types';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getCities = () => async dispatch => {\r\n    dispatch(citiesLoading());\r\n    await axios\r\n        .get('http://localhost:5000/cities/all',\r\n        {headers:{\r\n            \r\n        }})\r\n        .then(res => dispatch({\r\n            type: GET_CITIES,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const citiesLoading = () => {\r\n    return {\r\n        type: DATA_LOADING \r\n    }\r\n}\r\n\r\nexport const getItineraries = (cityId) => async dispatch => {\r\n    dispatch(itinerariesLoading(cityId));\r\n    await axios\r\n        .get('http://localhost:5000/itineraries/' + cityId)\r\n        .then(res => dispatch({\r\n            type: GET_ITINERARIES,\r\n            payload: res.data\r\n        }))\r\n}\r\n\r\nexport const itinerariesLoading = () => {\r\n    return {\r\n        type: DATA_LOADING \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}