{"ast":null,"code":"import { CREATE_ACCOUNT, LOG_IN, LOG_IN_GOOGLE } from './types';\nimport axios from 'axios';\nexport const createAccount = userData => async dispatch => {\n  console.log(userData);\n  await axios.post('http://localhost:5000/users/signup', userData).then(res => dispatch({\n    type: CREATE_ACCOUNT,\n    payload: res.data\n  })).catch(err => console.log(err));\n};\nexport const logIn = userData => async dispatch => {\n  await axios.post('http://localhost:5000/users/login', userData).then(res => dispatch({\n    type: LOG_IN,\n    payload: res.data\n  })).then(console.log('todo piola en el action'));\n};\nexport const logInGoogle = userData => async dispatch => {\n  console.log('USER ACTION');\n  console.log(userData);\n  dispatch({\n    type: LOG_IN_GOOGLE,\n    payload: userData\n  });\n}; //Load User and Get Token\n\nexport const IdentifyUser = token => async dispatch => {\n  await axios.get('http://localhost:5000/users/identifyuser', {\n    headers: {\n      Authorization\n    }\n  }); //User Loading\n\n  dispatch({\n    type: USER_LOADING\n  });\n\n  try {\n    const _ref = await axios.get('http://localhost/5001/api/users/user', tokenConfig(getState)),\n          data = _ref.data,\n          status = _ref.status;\n\n    dispatch({\n      type: USER_LOADED,\n      payload: data\n    });\n  } catch (error) {\n    dispatch(returnErrors(error.response.data, error.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/actions/userActions.js"],"names":["CREATE_ACCOUNT","LOG_IN","LOG_IN_GOOGLE","axios","createAccount","userData","dispatch","console","log","post","then","res","type","payload","data","catch","err","logIn","logInGoogle","IdentifyUser","token","get","headers","Authorization","USER_LOADING","tokenConfig","getState","status","USER_LOADED","error","returnErrors","response","AUTH_ERROR"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,MAAzB,EAAiCC,aAAjC,QAAsD,SAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACzDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMF,KAAK,CACNM,IADC,CACI,oCADJ,EAC0CJ,QAD1C,EAEDK,IAFC,CAEKC,GAAG,IAAIL,QAAQ,CAAC;AACnBM,IAAAA,IAAI,EAAEZ,cADa;AAEnBa,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFM,GAAD,CAFpB,EAMDC,KANC,CAMOC,GAAD,IAAST,OAAO,CAACC,GAAR,CAAYQ,GAAZ,CANf,CAAN;AAOH,CATM;AAWP,OAAO,MAAMC,KAAK,GAAIZ,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACjD,QAAMH,KAAK,CACNM,IADC,CACI,mCADJ,EACyCJ,QADzC,EAEDK,IAFC,CAEKC,GAAG,IAAIL,QAAQ,CAAC;AACnBM,IAAAA,IAAI,EAAEX,MADa;AAEnBY,IAAAA,OAAO,EAAEF,GAAG,CAACG;AAFM,GAAD,CAFpB,EAMDJ,IANC,CAMIH,OAAO,CAACC,GAAR,CAAY,yBAAZ,CANJ,CAAN;AAOH,CARM;AAUP,OAAO,MAAMU,WAAW,GAAIb,QAAD,IAAc,MAAMC,QAAN,IAAkB;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAC,EAAAA,QAAQ,CAAC;AACLM,IAAAA,IAAI,EAAEV,aADD;AAELW,IAAAA,OAAO,EAAER;AAFJ,GAAD,CAAR;AAKP,CARM,C,CAUP;;AACA,OAAO,MAAMc,YAAY,GAAIC,KAAD,IAAW,MAAMd,QAAN,IAAkB;AACrD,QAAMH,KAAK,CACNkB,GADC,CACG,0CADH,EAEF;AACIC,IAAAA,OAAO,EAAE;AACLC,MAAAA;AADK;AADb,GAFE,CAAN,CADqD,CASrD;;AACAjB,EAAAA,QAAQ,CAAC;AACPM,IAAAA,IAAI,EAAEY;AADC,GAAD,CAAR;;AAIA,MAAI;AAAA,iBACuB,MAAMrB,KAAK,CAACkB,GAAN,CAC7B,sCAD6B,EAE7BI,WAAW,CAACC,QAAD,CAFkB,CAD7B;AAAA,UACMZ,IADN,QACMA,IADN;AAAA,UACYa,MADZ,QACYA,MADZ;;AAKFrB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEgB,WADC;AAEPf,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOe,KAAP,EAAc;AACdvB,IAAAA,QAAQ,CAACwB,YAAY,CAACD,KAAK,CAACE,QAAN,CAAejB,IAAhB,EAAsBe,KAAK,CAACE,QAAN,CAAeJ,MAArC,CAAb,CAAR;AACArB,IAAAA,QAAQ,CAAC;AACPM,MAAAA,IAAI,EAAEoB;AADC,KAAD,CAAR;AAGD;AACF,CA7BI","sourcesContent":["import { CREATE_ACCOUNT, LOG_IN, LOG_IN_GOOGLE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const createAccount = (userData) => async dispatch => {\r\n    console.log(userData);\r\n    await axios\r\n        .post('http://localhost:5000/users/signup', userData)\r\n        .then( res => dispatch({\r\n            type: CREATE_ACCOUNT,\r\n            payload: res.data\r\n        }))\r\n        .catch( (err) => console.log(err))\r\n}\r\n\r\nexport const logIn = (userData) => async dispatch => {\r\n    await axios\r\n        .post('http://localhost:5000/users/login', userData)\r\n        .then( res => dispatch({\r\n            type: LOG_IN,\r\n            payload: res.data\r\n        }))\r\n        .then(console.log('todo piola en el action'))\r\n}\r\n\r\nexport const logInGoogle = (userData) => async dispatch => {\r\n        console.log('USER ACTION');\r\n        console.log(userData);\r\n        dispatch({\r\n            type: LOG_IN_GOOGLE,\r\n            payload: userData\r\n        })\r\n    \r\n}\r\n\r\n//Load User and Get Token\r\nexport const IdentifyUser = (token) => async dispatch => {\r\n    await axios\r\n        .get('http://localhost:5000/users/identifyuser',\r\n        {\r\n            headers: {\r\n                Authorization\r\n            }\r\n        })\r\n    \r\n    //User Loading\r\n    dispatch({\r\n      type: USER_LOADING\r\n    });\r\n  \r\n    try {\r\n      const { data, status } = await axios.get(\r\n        'http://localhost/5001/api/users/user',\r\n        tokenConfig(getState)\r\n      );\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: data\r\n      });\r\n    } catch (error) {\r\n      dispatch(returnErrors(error.response.data, error.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}