{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\ItinerariesPage\\\\ItinerariesPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Spinner, ListGroup } from 'reactstrap'; // actions importadas\n\nimport { getItineraries } from '../../actions/cityActions';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport ItineraryBox from '../ItineraryBox/ItineraryBox';\n\nclass ItinerariesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itineraries: [],\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.match.params.cityId);\n    await this.props.getItineraries(this.props.match.params.cityId);\n    this.setState({\n      itineraries: this.props.itineraries,\n      loading: this.props.loading\n    });\n    console.log(this.state);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"itinerariesPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), this.props.loading === true && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), ' ', React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), ' ', React.createElement(Spinner, {\n      style: {\n        width: '3rem',\n        height: '3rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), ' '), this.props.loading === false && React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.itineraries.map(city => React.createElement(Iti, {\n      key: city._id,\n      city: city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\n  return {\n    itineraries: state.cities.itineraries,\n    loading: state.cities.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getItineraries: cityId => dispatch(getItineraries(cityId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItinerariesPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/ItinerariesPage/ItinerariesPage.js"],"names":["React","connect","Spinner","ListGroup","getItineraries","AppNavBar","ItineraryBox","ItinerariesPage","Component","constructor","props","state","itineraries","loading","componentDidMount","console","log","match","params","cityId","setState","render","width","height","map","city","_id","mapStateToProps","cities","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Spinner, ListGroup } from 'reactstrap';\r\n\r\n// actions importadas\r\nimport { getItineraries } from '../../actions/cityActions';\r\n\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport ItineraryBox from '../ItineraryBox/ItineraryBox';\r\n\r\nclass ItinerariesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            itineraries: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(this.props.match.params.cityId);\r\n        await this.props.getItineraries(this.props.match.params.cityId);\r\n        this.setState({ \r\n            itineraries: this.props.itineraries,\r\n            loading: this.props.loading\r\n        });\r\n        console.log(this.state)\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"itinerariesPage\">\r\n                <AppNavBar/>\r\n                { this.props.loading === true && \r\n                    <div>\r\n                        <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\r\n                        <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\r\n                        <Spinner style={{ width: '3rem', height: '3rem' }} />{' '}\r\n                    </div>\r\n                }\r\n                { this.props.loading === false &&  \r\n                    <ListGroup> \r\n                        {this.state.itineraries.map( (city) => <Iti key={city._id} city={city}/> )}              \r\n                    </ListGroup>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\\\r\n    return {\r\n        itineraries: state.cities.itineraries,\r\n        loading: state.cities.loading,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getItineraries: (cityId) => dispatch(getItineraries(cityId)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItinerariesPage);"]},"metadata":{},"sourceType":"module"}