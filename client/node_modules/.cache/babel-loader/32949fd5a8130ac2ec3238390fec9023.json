{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SebastianOtero\\\\Documents\\\\Mindhub\\\\ItineraryApp\\\\client\\\\src\\\\components\\\\CitiesPage\\\\Cities.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ListGroup, ListGroupItem, Label, Input } from 'reactstrap';\nimport AppNavBar from '../AppNavbar/AppNavBar';\nimport CityBox from '../CityBox/CityBox';\nimport './Cities.css'; // actions importadas\n\nimport { getCities } from '../../actions/cityActions';\n\nclass CitiesPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: [],\n      animales: ['perro', 'gato', 'canario']\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getCities(); // llamo a la funcion que genera como prop en el dispatch\n    //this.setState({ cities: this.props.cities})\n\n    console.log(this.props.cities);\n  } // filterCities = () => {\n  // }\n\n\n  render() {\n    console.log(this.props.cities);\n    console.log(this.state.cities.cities[0]); // const { adsd } = this.props.animales\n    // console.log( {adsd} );\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(AppNavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //store.getState();\n  //Voy a tomar el estado y lo voy a generar como propiedad para el componente\n  return {\n    cities: state.cities\n  };\n}; //regresa creadores de acciones (action creators)\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCities: () => dispatch(getCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);","map":{"version":3,"sources":["C:/Users/SebastianOtero/Documents/Mindhub/ItineraryApp/client/src/components/CitiesPage/Cities.js"],"names":["React","connect","ListGroup","ListGroupItem","Label","Input","AppNavBar","CityBox","getCities","CitiesPage","Component","constructor","props","state","cities","animales","componentDidMount","console","log","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,KAAnC,EAA0CC,KAA1C,QAAuD,YAAvD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,cAAP,C,CAEA;;AACA,SAASC,SAAT,QAA0B,2BAA1B;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,QAAQ,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,SAAlB;AAFD,KAAb;AAIH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAM,KAAKJ,KAAL,CAAWJ,SAAX,EAAN,CADsB,CACQ;AAC9B;;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,MAAvB;AACH,GAboC,CAcrC;AAEA;;;AAEAK,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,MAAvB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,MAAX,CAAkBA,MAAlB,CAAyB,CAAzB,CAAZ,EAFK,CAGL;AACA;;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAYH;;AAnCoC;;AAsCzC,MAAMM,eAAe,GAAIP,KAAD,IAAW;AAC/B;AACA;AACA,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACC;AADX,GAAP;AAGH,CAND,C,CAQA;;;AACA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHd,IAAAA,SAAS,EAAE,MAAMc,QAAQ,CAACd,SAAS,EAAV;AADtB,GAAP;AAGH,CAJD;;AAMA,eAAeP,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CZ,UAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ListGroup, ListGroupItem, Label, Input } from 'reactstrap';\r\nimport AppNavBar from '../AppNavbar/AppNavBar';\r\nimport CityBox from '../CityBox/CityBox';\r\nimport './Cities.css';\r\n\r\n// actions importadas\r\nimport { getCities } from '../../actions/cityActions';\r\n\r\nclass CitiesPage extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            cities: [],\r\n            animales: ['perro', 'gato', 'canario']\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.props.getCities(); // llamo a la funcion que genera como prop en el dispatch\r\n        //this.setState({ cities: this.props.cities})\r\n        console.log(this.props.cities)\r\n    }\r\n    // filterCities = () => {\r\n\r\n    // }\r\n\r\n    render() {   \r\n        console.log(this.props.cities);\r\n        console.log(this.state.cities.cities[0]);\r\n        // const { adsd } = this.props.animales\r\n        // console.log( {adsd} );\r\n        return(\r\n            <div>  \r\n                <AppNavBar/>\r\n                {/* <Input type=\"text\" name=\"cityFilter\" id=\"cityFilter\" \r\n                        placeholder=\"Search your city...\" onChange={this.filterCities}/> */}\r\n                {/* {this.props.cities.map(pepe => <h1>{pepe}</h1>)} */}\r\n               {/* {this.props.cities.map(city => \r\n                    <CityBox city={city}></CityBox>)} */}\r\n               {/* <QueryCitiesList cities={this.state.filteredCities} name={\"asd\"} /> */}\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    //store.getState();\r\n    //Voy a tomar el estado y lo voy a generar como propiedad para el componente\r\n    return {\r\n        cities: state.cities,\r\n    };\r\n};\r\n\r\n//regresa creadores de acciones (action creators)\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getCities: () => dispatch(getCities())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CitiesPage);\r\n"]},"metadata":{},"sourceType":"module"}